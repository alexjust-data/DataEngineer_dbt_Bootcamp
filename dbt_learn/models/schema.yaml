version: 2
models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings.
    columns:
      - name: listing_id
        description: Primary key for the listing
        tests:
          - unique
          - not_null
      - name: host_id
        description: The hosts's id. References the host table.
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id
      - name: room_type
        description: Type of the apartment / room
        tests:
          - accepted_values:
              values:
                - Entire home/apt
                - Private room
                - Shared room
                - Hotel room
      - name: minimum_nights
        description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
        tests:
          - positive_value
  - name: dim_listings_w_hosts
    description: This is VM listings with hosts.
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source("airbnb","listings")
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: 0.99
              min_value: 50
              max_value: 500
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000
              config:
                severity: warn
  - name: dim_hosts_cleansed
    columns:
      - name: host_id
        tests:
          - not_null
          - unique
      - name: host_name
        tests:
          - not_null
      - name: is_superhost
        tests:
          - accepted_values:
              values:
                - t
                - f
  - name: fct_reviews
    columns:
      - name: listing_id
        tests:
          - relationships:
              to: ref('dim_listings_cleansed')
              field: listing_id
      - name: reviewer_name
        tests:
          - not_null
      - name: review_sentiment
        tests:
          - accepted_values:
              values:
                - positive
                - neutral
                - negative
  - name: mart_full_moon_reviews
    description: sample description for mart_fullmoon_reviews model
    columns:
      - name: review_id
        description: The unique identifier for each review. This is a string field.
        data_type: varchar
        tests:
          - unique
      - name: listing_id
        description: The unique identifier for each listing. This is a numeric field.
        data_type: number
      - name: reviewer_name
        description: The name of the individual who wrote the review. This is a string
          field and can contain any characters.
        data_type: varchar
      - name: review_text
        description: The text content of the review written by the reviewer. This is a
          string field and can contain any characters.
        data_type: varchar
      - name: review_sentiment
        description: The sentiment of the review, determined through sentiment analysis
          of the review text. This is a string field and can contain values such
          as 'positive', 'negative', or 'neutral'.
        data_type: varchar
        tests:
          - relationships:
              field: HOST_ID
              to: ref('dim_listings_cleansed')
      - name: is_full_moon
        description: This column is a derived column that indicates whether the review
          was made on a full moon day or not. The value is 'full moon' if the
          review date matches with any date in the 'seed_full_moon_dates' table,
          otherwise, the value is 'not full moon'.
        data_type: varchar
